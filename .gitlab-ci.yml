variables:
  LC_ALL: "en_US.UTF-8"
  LANG: "en_US.UTF-8"
  LANGUAGE: "en_US"
  LIB_NAME: "idaustriacredential"
  GRADLE_USER_HOME: "${CI_PROJECT_DIR}/.gradle"
  GRADLE_OPTS: "-Dorg.gradle.daemon=false -Dorg.gradle.console=plain -Dmaven.repo.local=${CI_PROJECT_DIR}/.m2/repository"
  SECURE_LOG_LEVEL: "debug"
  SAST_JAVA_VERSION: "11"
  SECRET_DETECTION_EXCLUDED_PATHS: ".gradle,gradle,.m2"
  SAST_EXPERIMENTAL_FEATURES: "true"

include:
  - template: Dependency-Scanning.gitlab-ci.yml
  - template: Security/SAST.gitlab-ci.yml
  - template: Secret-Detection.gitlab-ci.yml

default:
  image: gradle:jdk11
  tags:
    - docker

cache:
  paths:
    - ".gradle/wrapper"
    - ".gradle/caches"
    - ".m2/repository"

workflow:
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
      when: never
    - if: '$CI_COMMIT_REF_NAME == "master" || $CI_COMMIT_REF_NAME == "development" || $CI_COMMIT_REF_NAME =~ /^release.*$/ || $CI_COMMIT_REF_NAME =~ /^feature.*$/'

assembleJdk11:
  image: maven:3.6-jdk-11
  script: |
    ./gradlew --continue clean jvmTest
  artifacts:
    when: always
    reports:
      junit: "build/test-results/jvmTest/TEST-*.xml"

assembleIos:
  tags:
    - ios
  script: |
    ./gradlew --continue clean iosX64Test iosSimulatorArm64Test
  artifacts:
    when: always
    reports:
      junit: "build/test-results/ios*64Test/TEST-*.xml"

publish:
  needs:
    - assembleJdk11
    - assembleIos
  tags:
    - ios
  rules:
    - if: '$CI_COMMIT_REF_NAME == "development"'
      when: always
      allow_failure: true
    - if: '$CI_COMMIT_REF_NAME == "master" || $CI_COMMIT_REF_NAME == "development" || $CI_COMMIT_REF_NAME =~ /^release.*$/ || $CI_COMMIT_REF_NAME =~ /^feature.*$/'
      when: manual
      allow_failure: true
  script: |
    export VERSION=$(grep artifactVersion gradle.properties | sed "s/artifactVersion = //g")
    [[ -z "$VERSION" ]] && { echo "Version is empty" ; exit 1; }
    echo "Publishing version $VERSION for $LIB_NAME"
    echo "VERSION=$VERSION" >> variables.env
    ./gradlew --continue assemble publishAllPublicationsToGitlabRepository
  artifacts:
    when: always
    reports:
      dotenv: variables.env

release:
  image: registry.gitlab.com/gitlab-org/release-cli:latest
  needs:
    - job: publish
      artifacts: true
  rules:
    - if: '$CI_COMMIT_REF_NAME == "master" || $CI_COMMIT_REF_NAME =~ /^release.*$/'
      when: manual
  script: |
    echo "Releasing version $VERSION of $LIB_NAME"
    [[ -z "$VERSION" ]] && { echo "Version is empty" ; exit 1; }
    release-cli create --name "$VERSION" --tag-name "v$VERSION" --ref "$CI_COMMIT_SHA" --description "$(cat README.md)" \
        --assets-link "{\"name\":\"$LIB_NAME-$VERSION.pom\",\"url\":\"${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/maven/at/asitplus/wallet/$LIB_NAME/$VERSION/$LIB_NAME-$VERSION.pom\"}" \
        --assets-link "{\"name\":\"$LIB_NAME-$VERSION.jar\",\"url\":\"${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/maven/at/asitplus/wallet/$LIB_NAME/$VERSION/$LIB_NAME-$VERSION.jar\"}" \
        --assets-link "{\"name\":\"$LIB_NAME-$VERSION.zip\",\"url\":\"${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/generic/$LIB_NAME/$VERSION/$LIB_NAME-$VERSION.zip\"}"
